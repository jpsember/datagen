// ---------------------------------------------------------------------------------------
// Generated code: DO NOT MODIFY
// ---------------------------------------------------------------------------------------

[!package_decl]

import (
[!imports])

@@//
@@// Generated Go data class (do not edit!)
@@//
[!deprecated]type [!class] struct {
[!instance_fields]}

[!deprecated]type [!class]Builder struct {
  m [!class]
}

// ---------------------------------------------------------------------------------------
// [!class] interface
// ---------------------------------------------------------------------------------------

type [!class]OrBuilder interface {
  DataClass
[!class_getter_declaration]
  Build() *[!class]
  ToBuilder() *[!class]Builder
}

var Default[!class] = new[!class]()

// Convenience method to get a fresh builder.
func New[!class]() *[!class]Builder {
  return Default[!class].ToBuilder()
}

// Construct a new static object, with fields initialized appropriately
func new[!class]() *[!class] {
  var m = [!class]{}
[!class_init_fields_to_defaults]
  return &m
}


// ---------------------------------------------------------------------------------------
// Implementation of static (built) object
// ---------------------------------------------------------------------------------------

[!class_getter_implementation]

func (v *[!class]) Build() *[!class] {
  // This is already the immutable (built) version.
  return v
}

func (v *[!class]) ToBuilder() *[!class]Builder {
  var b = new([!class]Builder)
  var d = &b.m
[!copy_to_builder]
  return b
}

func (v *[!class]) ToJson() any {
  var m = NewJSMap()
[!to_json]
  return m
}

func (v *[!class]) Parse(source any) DataClass {
  var s = source.(*JSMap)
  var n = new[!class]()
[!parse]
  return n
}

func (v *[!class]) String() string {
  var x = v.ToJson()
  var x2 = x.(*JSMap)
  return PrintJSEntity(x2, true)
}

// ---------------------------------------------------------------------------------------
// Implementation of builder
// ---------------------------------------------------------------------------------------

[!go_builder_getter_implementation]

[!setters]

func (v *[!class]Builder) Build() *[!class] {
  var b = new([!class])
  var s = &v.m
[!copyfield_from_builder]
  return b
}

func (v *[!class]Builder) ToBuilder() *[!class]Builder {
  return v
}

func (v *[!class]Builder) ToJson() any {
  return v.m.ToJson()
}

func (v *[!class]Builder) Parse(source any) DataClass {
  return Default[!class].Parse(source)
}

func (v *[!class]Builder) String() string {
  return v.m.String()
}
